/*
 * Author: Mike Bennett (mike@thwonk.com)
 *
 * Purpose: Communicate with the database.
*/

#ifndef __DBCHATTER_H__
#define __DBCHATTER_H__

#include<mysql.h>
#include "codewide.h"


/*
 * Defines used for table values in the database, see database/thwonk.sql for related
 * table design and these defines should be same as in PHP config.inc.php
*/
#define DBVAL_user_accType_UNACTIVATED			1
#define DBVAL_user_accType_ADMIN			100
#define DBVAL_user_accType_NOLOGIN			200
#define DBVAL_user_accType_UNKNOWN			300
#define DBVAL_user_accType_USER				1000

#define DBVAL_user_username_NOLOGIN_USER		"THWONK_NOLOGIN_USER"
#define DBVAL_user_username_UNKNOWN_USER		"THWONK_UNKNOWN_USER"

#define DBVAL_message_messageType_UNKNOWN		1
#define DBVAL_message_messageType_EVERYTHING		2
#define DBVAL_message_messageType_EMAILIN		3
#define DBVAL_message_messageType_EMAILOUT_TYPE1	4	// See thwonk.sql message TABLE definition for
								//  the meanings of each of these types
#define DBVAL_message_messageType_EMAILOUT_TYPE2	5
#define DBVAL_message_messageType_EMAILOUT_TYPE3	6
#define DBVAL_message_messageType_EMAILOUT_TYPE4	7
#define DBVAL_message_messageType_EMAILOUT_TYPE5	8
#define DBVAL_message_messageType_EMAILOUT_TYPE6	9
#define DBVAL_message_messageType_EMAILOUT_TYPE7	10
#define DBVAL_message_messageType_EMAILOUT_TYPE8	11

#define DBVAL_message_messageState_JUSTIN		1
#define DBVAL_message_messageState_PROCESSING		2
#define DBVAL_message_messageState_DONE			3

#define DBVAL_message_queue_messageType_UNKNOWN		DBVAL_message_messageType_UNKNOWN
#define DBVAL_message_queue_messageType_EVERYTHING	DBVAL_message_messageType_EVERYTHING
#define DBVAL_message_queue_messageType_EMAILIN		DBVAL_message_messageType_EMAILIN
#define DBVAL_message_queue_messageType_EMAILOUT	4

#define DBVAL_message_queue_queueState_JUSTIN		1
#define DBVAL_message_queue_queueState_PROCESSING	2
#define DBVAL_message_queue_queueState_DONE		3

#define DBVAL_message_queue_track_NORMAL		1000

#define DBVAL_void_membership_privilege_CREATOR		1
#define DBVAL_void_membership_privilege_ADMIN		100
#define DBVAL_void_membership_privilege_USER		1000

#define DBVAL_filter_user_filterType_EMAIL		1
#define DBVAL_filter_user_userId_UNKNOWN		5	// Corresponds to ID of THWONK_UNKNOWN_USER in live
								//  database

#define DBVAL_filter_user_status_ACTIVE			1
#define DBVAL_filter_user_status_INACTIVE		2
#define DBVAL_filter_user_status_SUSPENDED		3
#define DBVAL_filter_user_status_BANNED			4
#define DBVAL_filter_user_status_BLOCKED		6

#define DBVAL_filter_void_filterType_EMAIL		1

#define DBVAL_filter_void_status_ACTIVE			1
#define DBVAL_filter_void_status_INACTIVE		2
#define DBVAL_filter_void_status_SUSPENDED		3
#define DBVAL_filter_void_status_BANNED			4
#define DBVAL_filter_void_status_BLOCKED		6

#define DBVAL_filter_void_accessRights_PUBLICWORLD	1
#define DBVAL_filter_void_accessRights_PUBLICTHWONK	2
#define DBVAL_filter_void_accessRights_PRIVATETHWONK	3

#define DBVAL_vfile_fileType_UNKNOWN			1

#define DBVAL_logic_language_JAVASCRIPT			1

#define DBVAL_logic_rights_rightType_USER		1
#define DBVAL_logic_rights_rightType_VOID		2

#define DBVAL_logic_rights_ANYRIGHT_ALLOWED		1
#define DBVAL_logic_rights_ANYRIGHT_DENIED		2


/*
 * Rest of header
*/
#define DBRESULT MYSQL_RES
#define DBROW MYSQL_ROW

MYSQL *_myconn;

bool dbConnect();			// Open a connection to a database
void dbDisconnect();			// Close a connection to a database
char *dbEscapeString(char *, size_t);	// Escape a string for safe insertion in an SQL database

DBRESULT *dbQuery(const char *, ...);	// Perform a query on the database
void dbQueryFreeResult(DBRESULT *);	// Free the memory used by a result allocated by a previous dbQuery()

int dbQueryCountRows(DBRESULT *);	// Return a count of the number of rows returned or affected by a query
DBROW dbQueryGetRow(DBRESULT *);	// Process the results of a query

long dbQueryLastInsertId();		// Get the last insert id generated by an auto_increment

#endif
